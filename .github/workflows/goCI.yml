name: CI setup for Go #Name the workflow
on: #on event keyword
  push:
    branches: [main] #identifying branch

jobs: #Job to execute on event
  my-job:
    name: My Job
    runs-on: ubuntu-latest #specify OS in virtual machine
    steps:
    - name: Print a greeting
      run: |
        ls 
        echo Hello there! # run terminal command
        
    - name: Setup Go environment
      uses: actions/setup-go@v2.1.3
      with:
        # The Go version to download (if necessary) and use. Supports semver spec and ranges.
        go-version: 1.16.5 # optional
        
    - name: Show Go version
      run: |
        go version
        
    - name: Checkout our codes # Bring repo code to virtual environment
      uses: actions/checkout@v2
      
    - name: Check file system # Check virtual environment has my files
      run: |
        ls
        cat calc.go # Prints the content of calc.go
        
    - name: Checkout private repo remotely
      uses: actions/checkout@v2
      with:
        repository: lowkh2/GoSchoolRemoteExample # hidden/private repo to access
        path: virtualRepoFolder # Folder to save to, in virtual environment
        token: ${{ secrets.GO_SECRET }} # Pass to enter remote hidden repo

    - name: Show hidden files
      run: |
        cd virtualRepoFolder # to access folder, in virtual environment
        ls
        cat myText.txt # show content of file/folder
        cd ..
    
    - name: Install dependencies for GO
      run: |
        go get github.com/franela/goblin
        go get github.com/tebeka/go2xunit
        go mod init GoCICDDemo
        go mod tidy
        go test -v # command to run go test
        go test -v | go2xunit > report.xml # run test again and output report.xml
        ls # verify that report is indeed created
        
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1 # Checkout Unit Test Reporting action
      if: always() # always do it
      with:
        files: report.xml # make use of a file we created
        
